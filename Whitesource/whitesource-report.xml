<?xml version="1.0" encoding="UTF-8"?><vulnerabilities><vulnerability><severity>medium</severity><library>jquery-2.1.4.min.js</library><severityHistogram total="4"><high>0</high><medium>4</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2015-9251</name><cvss2score>4.3</cvss2score><cvss3score>6.1</cvss3score><confidentialityImpact>LOW</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>CHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N</vector><userInteraction>REQUIRED</userInteraction><description>jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text/javascript responses to be executed.</description><published>2018-01-18</published><modified>2020-07-15</modified><topFix><description>Upgrade to version jQuery - v3.0.0</description><message>Upgrade to version</message><url>https://nvd.nist.gov/vuln/detail/CVE-2015-9251</url></topFix><locations><location><path>/Users/sgovindappa2/myfiles_local/whitesource_scan/webgoat/webgoat-container/src/main/resources/static/js/libs/jquery-2.1.4.min.js</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>jquery-2.1.4.min.js</library><severityHistogram total="4"><high>0</high><medium>4</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2019-11358</name><cvss2score>4.3</cvss2score><cvss3score>6.1</cvss3score><confidentialityImpact>LOW</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>CHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N</vector><userInteraction>REQUIRED</userInteraction><description>jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.</description><published>2019-04-20</published><modified>2020-07-15</modified><topFix><description>Upgrade to version 3.4.0</description><message>Upgrade to version</message><url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11358</url></topFix><locations><location><path>/Users/sgovindappa2/myfiles_local/whitesource_scan/webgoat/webgoat-container/src/main/resources/static/js/libs/jquery-2.1.4.min.js</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>jquery-2.1.4.min.js</library><severityHistogram total="4"><high>0</high><medium>4</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-11022</name><cvss2score>4.3</cvss2score><cvss3score>6.1</cvss3score><confidentialityImpact>LOW</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>CHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N</vector><userInteraction>REQUIRED</userInteraction><description>In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.</description><published>2020-04-29</published><modified>2020-08-20</modified><topFix><description>Upgrade to version jQuery - 3.5.0</description><message>Upgrade to version</message><url>https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/</url></topFix><locations><location><path>/Users/sgovindappa2/myfiles_local/whitesource_scan/webgoat/webgoat-container/src/main/resources/static/js/libs/jquery-2.1.4.min.js</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>jquery-2.1.4.min.js</library><severityHistogram total="4"><high>0</high><medium>4</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-11023</name><cvss2score>4.3</cvss2score><cvss3score>6.1</cvss3score><confidentialityImpact>LOW</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>CHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N</vector><userInteraction>REQUIRED</userInteraction><description>In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing &lt;option&gt; elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.</description><published>2020-04-29</published><modified>2020-08-13</modified><topFix><description>Upgrade to version jquery - 3.5.0</description><message>Upgrade to version</message><url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11023</url></topFix><locations><location><path>/Users/sgovindappa2/myfiles_local/whitesource_scan/webgoat/webgoat-container/src/main/resources/static/js/libs/jquery-2.1.4.min.js</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>jquery-3.4.1.min.js</library><severityHistogram total="2"><high>0</high><medium>2</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-11022</name><cvss2score>4.3</cvss2score><cvss3score>6.1</cvss3score><confidentialityImpact>LOW</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>CHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N</vector><userInteraction>REQUIRED</userInteraction><description>In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.</description><published>2020-04-29</published><modified>2020-08-20</modified><topFix><description>Upgrade to version jQuery - 3.5.0</description><message>Upgrade to version</message><url>https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/</url></topFix><locations><location><path>/Users/sgovindappa2/myfiles_local/whitesource_scan/webgoat/webgoat-container/src/main/resources/static/js/libs/jquery.min.js</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>jquery-3.4.1.min.js</library><severityHistogram total="2"><high>0</high><medium>2</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-11023</name><cvss2score>4.3</cvss2score><cvss3score>6.1</cvss3score><confidentialityImpact>LOW</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>CHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N</vector><userInteraction>REQUIRED</userInteraction><description>In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing &lt;option&gt; elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.</description><published>2020-04-29</published><modified>2020-08-13</modified><topFix><description>Upgrade to version jquery - 3.5.0</description><message>Upgrade to version</message><url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11023</url></topFix><locations><location><path>/Users/sgovindappa2/myfiles_local/whitesource_scan/webgoat/webgoat-container/src/main/resources/static/js/libs/jquery.min.js</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>high</severity><library>dom4j-2.1.1.jar</library><severityHistogram total="1"><high>1</high><medium>0</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-10683</name><cvss2score>7.5</cvss2score><cvss3score>9.8</cvss3score><confidentialityImpact>HIGH</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>HIGH</availabilityImpact><integrityImpact>HIGH</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</vector><userInteraction>NONE</userInteraction><description>dom4j before 2.0.3 and 2.1.x before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j.</description><published>2020-05-01</published><modified>2020-07-30</modified><topFix><description>Upgrade to version org.dom4j:dom4j:2.1.3,org.dom4j:dom4j:2.0.3</description><message>Upgrade to version</message><url>https://github.com/dom4j/dom4j/tree/version-2.1.3,https://github.com/dom4j/dom4j/tree/version-2.0.3</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>high</severity><library>snakeyaml-1.25.jar</library><severityHistogram total="1"><high>1</high><medium>0</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2017-18640</name><cvss2score>5.0</cvss2score><cvss3score>7.5</cvss3score><confidentialityImpact>NONE</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>HIGH</availabilityImpact><integrityImpact>NONE</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H</vector><userInteraction>NONE</userInteraction><description>The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.</description><published>2019-12-12</published><modified>2020-02-06</modified><topFix><description>Upgrade to version 1.26</description><message>Upgrade to version</message><url>https://bitbucket.org/asomov/snakeyaml/commits/da11ddbd91c1f8392ea932b37fa48110fa54ed8c</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/org/yaml/snakeyaml/1.25/snakeyaml-1.25.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>hibernate-validator-6.0.18.Final.jar</library><severityHistogram total="1"><high>0</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-10693</name><cvss2score>5.0</cvss2score><cvss3score>5.3</cvss3score><confidentialityImpact>NONE</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N</vector><userInteraction>NONE</userInteraction><description>A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.</description><published>2020-05-06</published><modified>2020-05-12</modified><topFix><description>Upgrade to version org.hibernate.validator:hibernate-validator:6.0.20.Final,org.hibernate.validator:hibernate-validator:6.1.5.Final,org.hibernate.validator:hibernate-validator:7.0.0.Alpha2</description><message>Upgrade to version</message><url>https://hibernate.atlassian.net/projects/HV/issues/HV-1774</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.18.Final/hibernate-validator-6.0.18.Final.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>hibernate-core-5.4.9.Final.jar</library><severityHistogram total="1"><high>0</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2019-14900</name><cvss2score>4.0</cvss2score><cvss3score>6.5</cvss3score><confidentialityImpact>HIGH</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>NONE</integrityImpact><privilegesRequired>LOW</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N</vector><userInteraction>NONE</userInteraction><description>A flaw was found in Hibernate ORM in versions before 5.3.18, 5.4.18 and 5.5.0.Beta1. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SELECT or GROUP BY parts of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks.</description><published>2020-07-06</published><modified>2020-07-14</modified><topFix><description>Upgrade to version org.hibernate:hibernate-core:5.4.18.Final</description><message>Upgrade to version</message><url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14900</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/org/hibernate/hibernate-core/5.4.9.Final/hibernate-core-5.4.9.Final.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>spring-webmvc-5.2.2.RELEASE.jar</library><severityHistogram total="1"><high>0</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-5397</name><cvss2score>2.6</cvss2score><cvss3score>5.3</cvss3score><confidentialityImpact>NONE</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N</vector><userInteraction>NONE</userInteraction><description>Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.</description><published>2020-01-17</published><modified>2020-07-15</modified><topFix><description>Upgrade to version 5.2.3</description><message>Upgrade to version</message><url>https://pivotal.io/security/cve-2020-5397</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/org/springframework/spring-webmvc/5.2.2.RELEASE/spring-webmvc-5.2.2.RELEASE.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>high</severity><library>spring-web-5.2.2.RELEASE.jar</library><severityHistogram total="3"><high>2</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2016-1000027</name><cvss2score>7.5</cvss2score><cvss3score>9.8</cvss3score><confidentialityImpact>HIGH</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>HIGH</availabilityImpact><integrityImpact>HIGH</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</vector><userInteraction>NONE</userInteraction><description>Pivotal Spring Framework 4.1.4 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required.</description><published>2020-01-02</published><modified>2020-01-09</modified><topFix><description>Replace or update the following files: HttpInvokerProxyFactoryBean.java, HttpInvokerServiceExporter.java</description><message>Commit 76964e1: Explicit note on Java deserialization</message><url>https://github.com/spring-projects/spring-framework/commit/76964e16efbcee7c19608e826aa26c032493baa0</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/org/springframework/spring-web/5.2.2.RELEASE/spring-web-5.2.2.RELEASE.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>spring-web-5.2.2.RELEASE.jar</library><severityHistogram total="3"><high>2</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-5397</name><cvss2score>2.6</cvss2score><cvss3score>5.3</cvss3score><confidentialityImpact>NONE</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N</vector><userInteraction>NONE</userInteraction><description>Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.</description><published>2020-01-17</published><modified>2020-07-15</modified><topFix><description>Upgrade to version 5.2.3</description><message>Upgrade to version</message><url>https://pivotal.io/security/cve-2020-5397</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/org/springframework/spring-web/5.2.2.RELEASE/spring-web-5.2.2.RELEASE.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>high</severity><library>spring-web-5.2.2.RELEASE.jar</library><severityHistogram total="3"><high>2</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-5398</name><cvss2score>7.6</cvss2score><cvss3score>7.5</cvss3score><confidentialityImpact>HIGH</confidentialityImpact><attackComplexity>HIGH</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>HIGH</availabilityImpact><integrityImpact>HIGH</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H</vector><userInteraction>REQUIRED</userInteraction><description>In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a "Content-Disposition" header in the response where the filename attribute is derived from user supplied input.</description><published>2020-01-17</published><modified>2020-07-15</modified><topFix><description>Upgrade to version org.springframework:spring-web:5.0.16.RELEASE,org.springframework:spring-web:5.1.13.RELEASE,org.springframework:spring-web:5.2.3.RELEASE</description><message>Upgrade to version</message><url>https://pivotal.io/security/cve-2020-5398</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/org/springframework/spring-web/5.2.2.RELEASE/spring-web-5.2.2.RELEASE.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>high</severity><library>undertow-core-2.0.28.Final.jar</library><severityHistogram total="3"><high>2</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-10705</name><cvss2score>5.0</cvss2score><cvss3score>7.5</cvss3score><confidentialityImpact>NONE</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>HIGH</availabilityImpact><integrityImpact>NONE</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H</vector><userInteraction>NONE</userInteraction><description>A flaw was discovered in Undertow in versions before Undertow 2.1.1.Final where certain requests to the "Expect: 100-continue" header may cause an out of memory error. This flaw may potentially lead to a denial of service.</description><published>2020-06-10</published><modified>2020-06-18</modified><topFix><description>Upgrade to version io.undertow:undertow-core:2.1.1.Final</description><message>Upgrade to version</message><url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10705</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/io/undertow/undertow-core/2.0.28.Final/undertow-core-2.0.28.Final.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>medium</severity><library>undertow-core-2.0.28.Final.jar</library><severityHistogram total="3"><high>2</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-10719</name><cvss2score>6.4</cvss2score><cvss3score>6.5</cvss3score><confidentialityImpact>LOW</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>NONE</availabilityImpact><integrityImpact>LOW</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N</vector><userInteraction>NONE</userInteraction><description>A flaw was found in Undertow in versions before 2.1.1.Final, regarding the processing of invalid HTTP requests with large chunk sizes. This flaw allows an attacker to take advantage of HTTP request smuggling.</description><published>2020-05-26</published><modified>2020-05-29</modified><topFix><description>Upgrade to version io.undertow:undertow-core:2.1.1.Final</description><message>Upgrade to version</message><url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10719</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/io/undertow/undertow-core/2.0.28.Final/undertow-core-2.0.28.Final.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability><vulnerability><severity>high</severity><library>undertow-core-2.0.28.Final.jar</library><severityHistogram total="3"><high>2</high><medium>1</medium><low>0</low></severityHistogram><type>CVE</type><name>CVE-2020-1745</name><cvss2score>7.5</cvss2score><cvss3score>9.8</cvss3score><confidentialityImpact>HIGH</confidentialityImpact><attackComplexity>LOW</attackComplexity><scope>UNCHANGED</scope><attackVector>NETWORK</attackVector><availabilityImpact>HIGH</availabilityImpact><integrityImpact>HIGH</integrityImpact><privilegesRequired>NONE</privilegesRequired><vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</vector><userInteraction>NONE</userInteraction><description>A file inclusion vulnerability was found in the AJP connector enabled with a default AJP configuration port of 8009 in Undertow version 2.0.29.Final and before and was fixed in 2.0.30.Final. A remote, unauthenticated attacker could exploit this vulnerability to read web application files from a vulnerable server. In instances where the vulnerable server allows file uploads, an attacker could upload malicious JavaServer Pages (JSP) code within a variety of file types and trigger this vulnerability to gain remote code execution.</description><published>2020-04-28</published><modified>2020-07-08</modified><topFix><description>Upgrade to version io.undertow:undertow-core:2.0.30.Final</description><message>Upgrade to version</message><url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1745</url></topFix><locations><location><path>/Users/sgovindappa2/.m2/repository/io/undertow/undertow-core/2.0.28.Final/undertow-core-2.0.28.Final.jar</path><matchType>Exact Match</matchType></location></locations></vulnerability></vulnerabilities>